name: Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
  workflow_dispatch:

env:
  GitHubMail: "@gmail.com"
  GitHubName: ""
  Branch: "wzv3"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Workflow Repo
        uses: actions/checkout@v4

      - name: Set Git Configs
        run: |
          git config --global user.email "${{ env.GitHubMail }}"
          git config --global user.name "${{ env.GitHubName }}"
          git config --global credential.helper store
          echo "https://${{ env.GitHubName }}:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials

      - name: Clean Workspace with SlimHub
        uses: rokibhasansagar/slimhub_actions@main

      - name: Reinstall Docker after Cleanup
        run: |
          sudo apt-get update
          sudo apt-get install -y docker.io
          sudo systemctl start docker
          docker --version

      - name: Clone Mirror Bot Repository
        run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/${{ secrets.MIRROR_REPOSLUG }} -b ${{ env.Branch }} source

      - name: Build Mirror Docker Image
        run: |
          cd source || exit 1
          docker container prune --force || true
          docker build . --rm --force-rm --compress --no-cache=true --pull -f Dockerfile -t mirror-bot

      - name: Run Mirror Bot Container
        timeout-minutes: 340
        continue-on-error: true
        env:
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          OWNER_ID: ${{ secrets.OWNER_ID }}
          TELEGRAM_API: ${{ secrets.TELEGRAM_API }}
          TELEGRAM_HASH: ${{ secrets.TELEGRAM_HASH }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
        run: |
          docker run --privileged --rm -i \
            -e BOT_TOKEN="${BOT_TOKEN}" \
            -e OWNER_ID="${OWNER_ID}" \
            -e TELEGRAM_API="${TELEGRAM_API}" \
            -e TELEGRAM_HASH="${TELEGRAM_HASH}" \
            -e DATABASE_URL="${DATABASE_URL}" \
            mirror-bot

      - name: Loop Workflow by Committing
        continue-on-error: true
        run: |
          git clone https://${{ secrets.GH_TOKEN }}@github.com/${{ github.repository }} loop
          cd loop || exit 1
          echo $(( RANDOM - ( RANDOM % RANDOM ) )) > looper.txt
          git add looper.txt
          git commit -m "Workflow: Loop"
          git push -q origin HEAD:main
